[sqlfluff]
templater = jinja
dialect = athena
sql_file_exts = .sql,.sql.jinja
# this rule overfires on athena nested arrays
exclude_rules=references.from,structure.column_order,aliasing.unused
max_line_length = 90

[sqlfluff:indentation]
template_blocks_indent = false

[sqlfluff:rules:layout.long_lines]
ignore_comment_lines = true

[sqlfluff:rules:capitalisation.keywords]
capitalisation_policy = upper

[sqlfluff:templater:jinja:context]
code_systems = ["http://snomed.info/sct", "http://hl7.org/fhir/sid/icd-10-cm"]
col_type_list = ["a string","b string"]
columns = ['a','b']
cc_columns = [{"name": "baz", "is_array": True}, {"name": "foobar", "is_array": False}]
cc_column = 'code'
code_system_tables = [{table_name":"hasarray","column_name":"acol","is_bare_coding":False,"is_array":True, "has_data": True},{"table_name":"noarray","column_name":"col","is_bare_coding":False,"is_array":False, "has_data": True}{"table_name":"bare","column_name":"bcol","is_bare_coding":True,"is_array":False, "has_data": True},{"table_name":"empty","column_name":"empty","is_bare_coding":False,"is_array":False, "has_data": False}]
column_name = 'bar'
conditions = ["1 > 0", "1 < 2"]
count_ref = count_ref
count_table = count_table
dataset = [["foo","foo"],["bar","bar"]]
dependent_variable = is_flu
ext_systems = ["omb", "text"]
field = 'column_name'
filter_table = filter_table
fhir_extension = fhir_extension
fhir_resource = patient
id = 'id'
join_cols_by_table = { "join_table": { "join_id": "enc_ref","included_cols": [["a"], ["b", "c"]]}}
join_id = subject_ref
medication_datasources = {"by_contained_ref" : True, "by_external_ref" : True}
neg_source_table = neg_source_table
output_table_name = 'created_table'
prefix = Test
primary_ref = encounter_ref
pos_source_table = pos_source_table
schema_name = test_schema
source_table = source_table
source_id = source_id
table_cols = ["a","b"]
table_cols_types = ["varchar", "varchar"]
table_name = test_table
table_suffix = 2024_01_01_11_11_11
target_col_prefix = prefix
target_table = target_table
type_casts={"b": "VARCHAR"}
unnests = [{"source col": "g", "table_alias": "i", "row_alias":"j"}, {"source col": "k", "table_alias": "l", "row_alias":"m"},]
view_cols = ["c","d"]
view_name = test_view
view_or_table_name = test_view_or_table
view_or_table = TABLE
where_clauses = ['cnt_subject >= 99', 'cnt_encounter >= 5']