{% import 'core_utils.jinja' as utils %}

CREATE TABLE core__observation AS
WITH temp_observation AS (
    SELECT
        {{- utils.basic_cols(
                'observation',
                'o',
                ['id','status', 'effectivedatetime']
            ) 
        }},
        --{{ schema }}
        {{- utils.truncate_date_cols(
                'observation',
                'o',
                [
                    ('effectivedatetime', 'day'),
                    ('effectivedatetime', 'week'),
                    ('effectivedatetime', 'month'),
                    ('effectivedatetime', 'year'),

                ],
                schema
            ) 
        }},
        odc.code as observation_code,
        odc.code_system as observation_code_system,
        odcat.code as category_code,
        odcat.code_system as category_code_system,
        odi.code as interpretation_code,
        odi.code_system as interpretation_code_system,
        odi.display as interpretation_display,
        odvcc.code as valuecodeableconcept_code,
        odvcc.code_system as valuecodeableconcept_code_system,
        odvcc.display as valuecodeableconcept_display,
        o.component,
        o.referencerange,
        o.valuequantity,
        o.subject.reference AS subject_ref,
        o.encounter.reference AS encounter_ref,
    FROM observation AS o
    LEFT JOIN core__observation_dn_category AS odcat ON o.id = odcat.id
    LEFT JOIN core__observation_dn_code AS odc ON o.id = odc.id
    LEFT JOIN core__observation_dn_interpretation AS odi ON o.id = odi.id
    LEFT JOIN core__observation_dn_valuecodeableconcept AS odvcc ON o.id = odvcc.id
)

SELECT
    id,
    category_code,
    category_code_system,
    component,
    status,
    observation_code,
    observation_code_system,
    interpretation_code,
    interpretation_code_system,
    interpretation_display,
    referencerange,
    valuequantity,
    valuecodeableconcept_code,
    valuecodeableconcept_code_system,
    valuecodeableconcept_display,
    effectivedatetime_day AS obs_date,
    effectivedatetime_week AS obs_week,
    effectivedatetime_month AS obs_month,
    effectivedatetime_year AS obs_year,
    subject_ref,
    encounter_ref,
    concat('Observation/', id) AS observation_ref
FROM temp_observation
WHERE effectivedatetime BETWEEN date(from_iso8601_timestamp('2016-06-01')) AND current_date;
