-- noqa: disable=all
-- This sql was autogenerated as a reference example using the library CLI.
-- Its format is tied to the specific database it was run against, and it may not
-- be correct for all databases. Use the CLI's build option to derive the best SQL
-- for your dataset.
CREATE TABLE core__count_condition_month AS (
    WITH
    filtered_table AS (
        SELECT
            s.subject_ref,
            s.encounter_ref,
            cccd.display AS cond_code_display,
            --noqa: disable=RF03, AL02
            s."category_code" AS cond_category_code,
            s."recorded_month" AS cond_month
            --noqa: enable=RF03, AL02
        FROM core__condition AS s
        LEFT JOIN core__condition_codable_concepts_display AS cccd
            ON s.condition_id = cccd.id
    ),
    
    null_replacement AS (
        SELECT
            subject_ref,
            encounter_ref,
            coalesce(
                cast(cond_code_display AS varchar), 
                'cumulus__missing-or-null'
            ) AS cond_code_display,
            coalesce(
                cast(cond_category_code AS varchar),
                'cumulus__missing-or-null'
            ) AS cond_category_code,
            coalesce(
                cast(cond_month AS varchar),
                'cumulus__missing-or-null'
            ) AS cond_month
        FROM filtered_table
    ),

    powerset AS (
        SELECT
            count(DISTINCT subject_ref) AS cnt_subject,
            count(DISTINCT encounter_ref) AS cnt_encounter_ref,
            "cond_category_code",
            "cond_month",
            cond_code_display
        FROM null_replacement
        GROUP BY
            cube(
                "cond_category_code",
                "cond_month",
                cond_code_display
            )
    )

    SELECT
        cnt_encounter_ref AS cnt,
        "cond_category_code",
        "cond_month",
        cond_code_display
    FROM powerset
    WHERE 
        cnt_subject >= 10
);

-- ###########################################################

CREATE TABLE core__count_documentreference_month AS (
    WITH
    filtered_table AS (
        SELECT
            s.subject_ref,
            s.encounter_ref,
            s.doc_ref,
            e.enc_class_display,
            --noqa: disable=RF03, AL02
            s."doc_type_display",
            s."author_month"
            --noqa: enable=RF03, AL02
        FROM core__documentreference AS s
        INNER JOIN core__encounter AS e
            ON s.encounter_ref = e.encounter_ref
        WHERE (s.status = 'current')
        AND (s.docStatus IS null OR s.docStatus IN ('final', 'amended'))
    ),
    
    null_replacement AS (
        SELECT
            subject_ref,
            encounter_ref,
            doc_ref,
            coalesce(
                cast(enc_class_display AS varchar), 
                'cumulus__missing-or-null'
            ) AS enc_class_display,
            coalesce(
                cast(doc_type_display AS varchar),
                'cumulus__missing-or-null'
            ) AS doc_type_display,
            coalesce(
                cast(author_month AS varchar),
                'cumulus__missing-or-null'
            ) AS author_month
        FROM filtered_table
    ),

    powerset AS (
        SELECT
            count(DISTINCT subject_ref) AS cnt_subject,
            count(DISTINCT encounter_ref) AS cnt_encounter_ref,count(DISTINCT doc_ref) AS cnt_doc_ref,
            "doc_type_display",
            "author_month",
            enc_class_display
            
        FROM null_replacement
        GROUP BY
            cube(
                "doc_type_display",
                "author_month",
                enc_class_display
                
            )
    )

    SELECT
        cnt_doc_ref AS cnt,
        "doc_type_display",
        "author_month",
        enc_class_display
        
    FROM powerset
    WHERE 
        cnt_subject >= 10
);

-- ###########################################################

CREATE TABLE core__count_encounter_month AS (
    WITH
    filtered_table AS (
        SELECT
            s.subject_ref,
            s.encounter_ref,
            --noqa: disable=RF03, AL02
            s."start_month",
            s."enc_class_display",
            s."age_at_visit",
            s."gender",
            s."race_display",
            s."ethnicity_display"
            --noqa: enable=RF03, AL02
        FROM core__encounter AS s
        WHERE s.status = 'finished'
    ),
    
    null_replacement AS (
        SELECT
            subject_ref,
            encounter_ref,
            coalesce(
                cast(start_month AS varchar),
                'cumulus__missing-or-null'
            ) AS start_month,
            coalesce(
                cast(enc_class_display AS varchar),
                'cumulus__missing-or-null'
            ) AS enc_class_display,
            coalesce(
                cast(age_at_visit AS varchar),
                'cumulus__missing-or-null'
            ) AS age_at_visit,
            coalesce(
                cast(gender AS varchar),
                'cumulus__missing-or-null'
            ) AS gender,
            coalesce(
                cast(race_display AS varchar),
                'cumulus__missing-or-null'
            ) AS race_display,
            coalesce(
                cast(ethnicity_display AS varchar),
                'cumulus__missing-or-null'
            ) AS ethnicity_display
        FROM filtered_table
    ),

    powerset AS (
        SELECT
            count(DISTINCT subject_ref) AS cnt_subject,
            count(DISTINCT encounter_ref) AS cnt_encounter_ref,
            "start_month",
            "enc_class_display",
            "age_at_visit",
            "gender",
            "race_display",
            "ethnicity_display"
        FROM null_replacement
        GROUP BY
            cube(
                "start_month",
                "enc_class_display",
                "age_at_visit",
                "gender",
                "race_display",
                "ethnicity_display"
            )
    )

    SELECT
        cnt_encounter_ref AS cnt,
        "start_month",
        "enc_class_display",
        "age_at_visit",
        "gender",
        "race_display",
        "ethnicity_display"
    FROM powerset
    WHERE 
        cnt_subject >= 10
);

-- ###########################################################

CREATE TABLE core__count_encounter_type AS (
    WITH
    filtered_table AS (
        SELECT
            s.subject_ref,
            s.encounter_ref,
            --noqa: disable=RF03, AL02
            s."enc_class_display",
            s."enc_type_display",
            s."enc_service_display",
            s."enc_priority_display"
            --noqa: enable=RF03, AL02
        FROM core__encounter_type AS s
        WHERE s.status = 'finished'
    ),
    
    null_replacement AS (
        SELECT
            subject_ref,
            encounter_ref,
            coalesce(
                cast(enc_class_display AS varchar),
                'cumulus__missing-or-null'
            ) AS enc_class_display,
            coalesce(
                cast(enc_type_display AS varchar),
                'cumulus__missing-or-null'
            ) AS enc_type_display,
            coalesce(
                cast(enc_service_display AS varchar),
                'cumulus__missing-or-null'
            ) AS enc_service_display,
            coalesce(
                cast(enc_priority_display AS varchar),
                'cumulus__missing-or-null'
            ) AS enc_priority_display
        FROM filtered_table
    ),

    powerset AS (
        SELECT
            count(DISTINCT subject_ref) AS cnt_subject,
            count(DISTINCT encounter_ref) AS cnt_encounter_ref,
            "enc_class_display",
            "enc_type_display",
            "enc_service_display",
            "enc_priority_display"
        FROM null_replacement
        GROUP BY
            cube(
                "enc_class_display",
                "enc_type_display",
                "enc_service_display",
                "enc_priority_display"
            )
    )

    SELECT
        cnt_encounter_ref AS cnt,
        "enc_class_display",
        "enc_type_display",
        "enc_service_display",
        "enc_priority_display"
    FROM powerset
    WHERE 
        cnt_subject >= 10
);

-- ###########################################################

CREATE TABLE core__count_encounter_type_month AS (
    WITH
    filtered_table AS (
        SELECT
            s.subject_ref,
            s.encounter_ref,
            --noqa: disable=RF03, AL02
            s."enc_class_display",
            s."enc_type_display",
            s."enc_service_display",
            s."enc_priority_display",
            s."start_month"
            --noqa: enable=RF03, AL02
        FROM core__encounter_type AS s
        WHERE s.status = 'finished'
    ),
    
    null_replacement AS (
        SELECT
            subject_ref,
            encounter_ref,
            coalesce(
                cast(enc_class_display AS varchar),
                'cumulus__missing-or-null'
            ) AS enc_class_display,
            coalesce(
                cast(enc_type_display AS varchar),
                'cumulus__missing-or-null'
            ) AS enc_type_display,
            coalesce(
                cast(enc_service_display AS varchar),
                'cumulus__missing-or-null'
            ) AS enc_service_display,
            coalesce(
                cast(enc_priority_display AS varchar),
                'cumulus__missing-or-null'
            ) AS enc_priority_display,
            coalesce(
                cast(start_month AS varchar),
                'cumulus__missing-or-null'
            ) AS start_month
        FROM filtered_table
    ),

    powerset AS (
        SELECT
            count(DISTINCT subject_ref) AS cnt_subject,
            count(DISTINCT encounter_ref) AS cnt_encounter_ref,
            "enc_class_display",
            "enc_type_display",
            "enc_service_display",
            "enc_priority_display",
            "start_month"
        FROM null_replacement
        GROUP BY
            cube(
                "enc_class_display",
                "enc_type_display",
                "enc_service_display",
                "enc_priority_display",
                "start_month"
            )
    )

    SELECT
        cnt_encounter_ref AS cnt,
        "enc_class_display",
        "enc_type_display",
        "enc_service_display",
        "enc_priority_display",
        "start_month"
    FROM powerset
    WHERE 
        cnt_subject >= 10
);

-- ###########################################################

CREATE TABLE core__count_encounter_enc_type_month AS (
    WITH
    filtered_table AS (
        SELECT
            s.subject_ref,
            s.encounter_ref,
            --noqa: disable=RF03, AL02
            s."enc_class_display",
            s."enc_type_display",
            s."start_month"
            --noqa: enable=RF03, AL02
        FROM core__encounter_type AS s
        WHERE s.status = 'finished'
    ),
    
    null_replacement AS (
        SELECT
            subject_ref,
            encounter_ref,
            coalesce(
                cast(enc_class_display AS varchar),
                'cumulus__missing-or-null'
            ) AS enc_class_display,
            coalesce(
                cast(enc_type_display AS varchar),
                'cumulus__missing-or-null'
            ) AS enc_type_display,
            coalesce(
                cast(start_month AS varchar),
                'cumulus__missing-or-null'
            ) AS start_month
        FROM filtered_table
    ),

    powerset AS (
        SELECT
            count(DISTINCT subject_ref) AS cnt_subject,
            count(DISTINCT encounter_ref) AS cnt_encounter_ref,
            "enc_class_display",
            "enc_type_display",
            "start_month"
        FROM null_replacement
        GROUP BY
            cube(
                "enc_class_display",
                "enc_type_display",
                "start_month"
            )
    )

    SELECT
        cnt_encounter_ref AS cnt,
        "enc_class_display",
        "enc_type_display",
        "start_month"
    FROM powerset
    WHERE 
        cnt_subject >= 10
);

-- ###########################################################

CREATE TABLE core__count_encounter_service_month AS (
    WITH
    filtered_table AS (
        SELECT
            s.subject_ref,
            s.encounter_ref,
            --noqa: disable=RF03, AL02
            s."enc_class_display",
            s."enc_service_display",
            s."start_month"
            --noqa: enable=RF03, AL02
        FROM core__encounter_type AS s
        WHERE s.status = 'finished'
    ),
    
    null_replacement AS (
        SELECT
            subject_ref,
            encounter_ref,
            coalesce(
                cast(enc_class_display AS varchar),
                'cumulus__missing-or-null'
            ) AS enc_class_display,
            coalesce(
                cast(enc_service_display AS varchar),
                'cumulus__missing-or-null'
            ) AS enc_service_display,
            coalesce(
                cast(start_month AS varchar),
                'cumulus__missing-or-null'
            ) AS start_month
        FROM filtered_table
    ),

    powerset AS (
        SELECT
            count(DISTINCT subject_ref) AS cnt_subject,
            count(DISTINCT encounter_ref) AS cnt_encounter_ref,
            "enc_class_display",
            "enc_service_display",
            "start_month"
        FROM null_replacement
        GROUP BY
            cube(
                "enc_class_display",
                "enc_service_display",
                "start_month"
            )
    )

    SELECT
        cnt_encounter_ref AS cnt,
        "enc_class_display",
        "enc_service_display",
        "start_month"
    FROM powerset
    WHERE 
        cnt_subject >= 10
);

-- ###########################################################

CREATE TABLE core__count_encounter_priority_month AS (
    WITH
    filtered_table AS (
        SELECT
            s.subject_ref,
            s.encounter_ref,
            --noqa: disable=RF03, AL02
            s."enc_class_display",
            s."enc_priority_display",
            s."start_month"
            --noqa: enable=RF03, AL02
        FROM core__encounter_type AS s
        WHERE s.status = 'finished'
    ),
    
    null_replacement AS (
        SELECT
            subject_ref,
            encounter_ref,
            coalesce(
                cast(enc_class_display AS varchar),
                'cumulus__missing-or-null'
            ) AS enc_class_display,
            coalesce(
                cast(enc_priority_display AS varchar),
                'cumulus__missing-or-null'
            ) AS enc_priority_display,
            coalesce(
                cast(start_month AS varchar),
                'cumulus__missing-or-null'
            ) AS start_month
        FROM filtered_table
    ),

    powerset AS (
        SELECT
            count(DISTINCT subject_ref) AS cnt_subject,
            count(DISTINCT encounter_ref) AS cnt_encounter_ref,
            "enc_class_display",
            "enc_priority_display",
            "start_month"
        FROM null_replacement
        GROUP BY
            cube(
                "enc_class_display",
                "enc_priority_display",
                "start_month"
            )
    )

    SELECT
        cnt_encounter_ref AS cnt,
        "enc_class_display",
        "enc_priority_display",
        "start_month"
    FROM powerset
    WHERE 
        cnt_subject >= 10
);

-- ###########################################################

CREATE TABLE core__count_medicationrequest_month AS (
    WITH
    filtered_table AS (
        SELECT
            s.subject_ref,
            --noqa: disable=RF03, AL02
            s."status",
            s."intent",
            s."authoredon_month",
            s."rx_display"
            --noqa: enable=RF03, AL02
        FROM core__medicationrequest AS s
    ),
    
    null_replacement AS (
        SELECT
            subject_ref,
            coalesce(
                cast(status AS varchar),
                'cumulus__missing-or-null'
            ) AS status,
            coalesce(
                cast(intent AS varchar),
                'cumulus__missing-or-null'
            ) AS intent,
            coalesce(
                cast(authoredon_month AS varchar),
                'cumulus__missing-or-null'
            ) AS authoredon_month,
            coalesce(
                cast(rx_display AS varchar),
                'cumulus__missing-or-null'
            ) AS rx_display
        FROM filtered_table
    ),

    powerset AS (
        SELECT
            count(DISTINCT subject_ref) AS cnt_subject,
            "status",
            "intent",
            "authoredon_month",
            "rx_display"
        FROM null_replacement
        GROUP BY
            cube(
                "status",
                "intent",
                "authoredon_month",
                "rx_display"
            )
    )

    SELECT
        cnt_subject AS cnt,
        "status",
        "intent",
        "authoredon_month",
        "rx_display"
    FROM powerset
    WHERE 
        cnt_subject >= 10
);

-- ###########################################################

CREATE TABLE core__count_observation_lab_month AS (
    WITH
    filtered_table AS (
        SELECT
            s.subject_ref,
            s.encounter_ref,
            s.observation_ref,
            e.enc_class_display,
            --noqa: disable=RF03, AL02
            s."lab_month",
            s."lab_code",
            s."lab_result_display"
            --noqa: enable=RF03, AL02
        FROM core__observation_lab AS s
        INNER JOIN core__encounter AS e
            ON s.encounter_ref = e.encounter_ref
        WHERE (s.status = 'final' OR s.status= 'amended')
    ),
    
    null_replacement AS (
        SELECT
            subject_ref,
            encounter_ref,
            observation_ref,
            coalesce(
                cast(enc_class_display AS varchar), 
                'cumulus__missing-or-null'
            ) AS enc_class_display,
            coalesce(
                cast(lab_month AS varchar),
                'cumulus__missing-or-null'
            ) AS lab_month,
            coalesce(
                cast(lab_code AS varchar),
                'cumulus__missing-or-null'
            ) AS lab_code,
            coalesce(
                cast(lab_result_display AS varchar),
                'cumulus__missing-or-null'
            ) AS lab_result_display
        FROM filtered_table
    ),

    powerset AS (
        SELECT
            count(DISTINCT subject_ref) AS cnt_subject,
            count(DISTINCT encounter_ref) AS cnt_encounter_ref,count(DISTINCT observation_ref) AS cnt_observation_ref,
            "lab_month",
            "lab_code",
            "lab_result_display",
            enc_class_display
            
        FROM null_replacement
        GROUP BY
            cube(
                "lab_month",
                "lab_code",
                "lab_result_display",
                enc_class_display
                
            )
    )

    SELECT
        cnt_observation_ref AS cnt,
        "lab_month",
        "lab_code",
        "lab_result_display",
        enc_class_display
        
    FROM powerset
    WHERE 
        cnt_subject >= 10
);

-- ###########################################################

CREATE TABLE core__count_patient AS (
    WITH
    filtered_table AS (
        SELECT
            s.subject_ref,
            --noqa: disable=RF03, AL02
            s."gender",
            s."race_display",
            s."ethnicity_display"
            --noqa: enable=RF03, AL02
        FROM core__patient AS s
    ),
    
    null_replacement AS (
        SELECT
            subject_ref,
            coalesce(
                cast(gender AS varchar),
                'cumulus__missing-or-null'
            ) AS gender,
            coalesce(
                cast(race_display AS varchar),
                'cumulus__missing-or-null'
            ) AS race_display,
            coalesce(
                cast(ethnicity_display AS varchar),
                'cumulus__missing-or-null'
            ) AS ethnicity_display
        FROM filtered_table
    ),

    powerset AS (
        SELECT
            count(DISTINCT subject_ref) AS cnt_subject,
            "gender",
            "race_display",
            "ethnicity_display"
        FROM null_replacement
        GROUP BY
            cube(
                "gender",
                "race_display",
                "ethnicity_display"
            )
    )

    SELECT
        cnt_subject AS cnt,
        "gender",
        "race_display",
        "ethnicity_display"
    FROM powerset
    WHERE 
        cnt_subject >= 10
);
