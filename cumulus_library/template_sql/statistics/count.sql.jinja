{%- macro comma_delineate(loop) -%}
{%- if not loop.last -%}
, 
{%- endif -%}
{%- endmacro -%}
{%- macro secondary_resource(fhir_resource) -%}
{%- if fhir_resource in ('condition', 'document', 'encounter', 'observation') -%}
{{ fhir_resource }}
{%- else -%}
None
{%- endif -%}
{%- endmacro -%}
-- noqa: disable=LT02{# LT02 is a indentation rule that overfires in the where
clause construction; it simultaneously asks for indentation of 4 and 8 spaces. #}
CREATE TABLE {{ table_name }} AS (
    WITH 
    {%- if filter_resource %}
    filtered_table AS (
        SELECT
            subject_ref,
            {%- if secondary_resource(fhir_resource) !='None' %}
            {{ secondary_resource(fhir_resource) }}_ref,
            {%- endif -%}
            {% for col in table_cols %}
            "{{ col }}"
            {%- if not loop.last -%}
            , 
            {%- endif -%}
            {%- endfor %}
        FROM {{ source_table }}
        {%- if fhir_resource=='document' and filter_resource %}
        WHERE (status = 'current')
        AND (d.docStatus IS null OR d.docStatus IN ('final', 'amended'))
        {%- elif fhir_resource=='encounter' and filter_resource %}
        WHERE status = 'finished'
        {%- elif fhir_resource=='observation' and filter_resource %}
        WHERE (status = 'final' OR status= 'amended')
        {%- endif %}
    ),
    {% endif %}
    null_replacement AS (
        SELECT
            subject_ref,
            {%- if secondary_resource(fhir_resource) !='None' %}
            {{ secondary_resource(fhir_resource) }}_ref,
            {%- endif -%}
            {% for col in table_cols %}
            coalesce(cast("{{ col }}" AS varchar), 'missing-or-null') AS "{{ col }}"
            {{- comma_delineate(loop) }}
            {%- endfor %}
        {%- if filter_resource %}
        FROM filtered_table
        {%- else  %}
        FROM {{ source_table }}
        {% endif %}
    ),

    powerset AS (
        SELECT
            count(DISTINCT subject_ref) AS cnt_subject,
            {%- if secondary_resource(fhir_resource) !='None' %}
            count(DISTINCT {{ secondary_resource(fhir_resource) }}_ref) AS cnt_{{ secondary_resource(fhir_resource) }},
            {%- endif -%}
            {% for col in table_cols %}
            "{{ col }}"
            {{- comma_delineate(loop) }}
            {%- endfor %}
        FROM null_replacement
        GROUP BY
            cube( 
                {%- for col in table_cols %}
                "{{ col }}"
                {{- comma_delineate(loop) }}
                {%- endfor %}
            )
    )

    SELECT
        {%- if secondary_resource(fhir_resource) !='None' %}
        cnt_{{ secondary_resource(fhir_resource) }}
        {%- else %}
        cnt_subject
        {%- endif %} AS cnt,
        {%- for col in table_cols %}
        "{{ col }}"
        {{- comma_delineate(loop) }}
        {%- endfor %}
    FROM powerset
    {%- if where_clauses %}
    WHERE
        {% for clause in where_clauses %}{{ clause }}
        {% if not loop.last %}AND {% endif %}
        {%- endfor -%}
    {%- else %}
    WHERE 
        cnt_subject >= {{ min_subject }}
    {%- endif %}
);
